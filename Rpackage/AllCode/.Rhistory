resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions = list(plotFig=FALSE),
networkAnalysis=TRUE)
DFs=networkDFfromMPoutput(chosen.time=1,MPoutput=out,sumOverStrains = FALSE)
vv=getVNPlotObject(DFs$nodes,DFs$edges,scaleNodes=TRUE,scaleEdges = TRUE,
mainTitle='Network after 1 d',
figWidth = 500,figHeight = 500)
visOptions(vv)
library(visNetwork)
microbes=c('Acetogens','Bacteroides','ButyrateProducers1')
out=microPopModel(microbeNames=microbes,
times=seq(0,2,0.01),
numStrains=c(Acetogens=1,Bacteroides=2,ButyrateProducers1=3),
strainOptions=list(randomParams=c('maxGrowthRate','halfSat'),percentTraitRange=20),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions = list(plotFig=FALSE),
networkAnalysis=TRUE)
DFs=networkDFfromMPoutput(chosen.time=1,MPoutput=out,sumOverStrains = FALSE)
vv=getVNPlotObject(DFs$nodes,DFs$edges,scaleNodes=TRUE,scaleEdges = TRUE,
mainTitle='Network after 1 d',
figWidth = 500,figHeight = 500)
visOptions(vv)
vignette("Introduction-to-visNetwork")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI,
numStrains=c(M1=3,M2=2),
strainOptions=list(randomParams=c('halfSat','yield','maxGrowthRate'),
seed=1,distribution='uniform',
percentTraitRange=20,
applyTraitTradeOffs=TRUE,
tradeOffParams=c('halfSat','maxGrowthRate'))
)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
showSolutions=FALSE
install.packages('microPop')
library(microPop)
#check package version
packageVersion("microPop")
M1=createDF(file='MFG1.csv')
kable(M1)
s=seq(0,0.05,0.0001)
Gmax=5
K=0.001
G=Gmax*s/(s+K)
plot(range(s),c(0,5),type='n',xlab='substrate (g/l)',ylab='Specific growth rate (/d)')
lines(s,G)
abline(v=K,lty=2,col=2)
abline(h=Gmax,col=3,lty=2)
legend('right',col=c(2,3),lty=2,legend=c('halfSat','maxGrowthRate'),bty='n')
res.SI=createDF(file='resourceSI.csv')
kable(res.SI)
mic.SI=createDF(file="microbeSI.csv")
kable(mic.SI)
out=microPopModel(microbeNames = 'M1',
times=seq(0,1,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=mic.SI)
names(out)
head(out$solution)
plot(range(out$solution[,'time']),c(0,10),type='n',xlab='Time (d)',ylab='concentration (g/l)')
lines(out$solution[,'time'],out$solution[,'M1'],col='black')
lines(out$solution[,'time'],out$solution[,'S1'],col='red')
lines(out$solution[,'time'],out$solution[,'P1'],col='blue')
legend('topright',c('M1','S1','P1'),col=c('black','red','blue'),lty=1)
names(out$parms)
out$parms$microbeNames
out$parms$resourceNames
M2=createDF(file="MFG2.csv")
kable(M2)
micNew.SI = cbind(mic.SI,M2=mic.SI[,'M1']) #cbind is a function which binds columns
kable(micNew.SI)
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI)
#SOLUTION
#look at the final concentrations:
out$solution[nrow(out$solution),c('M1','M2')]
#M1 and M2 have the smae yield but M2 has a higher max growth rate and a higher halfSat.
#As time goes on the substrate concentration is low so the max growth rate is not important.
#We change half-sat of M2 to 1e-4 (i.e. less than M1) and look what happens:
newM2=M2 #make a new copy of M2 to play with
newM2['halfSat','S1']=1e-4
micNew.SI = cbind(micNew.SI,newM2=micNew.SI[,'M2']) #add newM2 to the microbe SI data frame (assume same conditions as M2)
out=microPopModel(microbeNames = c('M1','newM2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI
)
out$solution[nrow(out$solution),c('M1','newM2')]
#Now M2 > M1 near the end of the simulation
#SOLUTION
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,10,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI
)
out$solution[nrow(out$solution),c('M1','M2')]
#M2 dies out as it can't compete with M1 at low substrate concentrations.
#SOLUTION
#start by making M1 and M2 the same:
newM2[c('halfSat','yield','maxGrowthRate'),'S1'] = M1[c('halfSat','yield','maxGrowthRate'),'S1']
out=microPopModel(microbeNames = c('M1','newM2'),
times=seq(0,6,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI
)
#Look at steady state values
out$solution[nrow(out$solution),c('M1','newM2','S1')]
#Now investigate the effect of yield values:
#make M2 have a lower yield than M1
newM2['yield','S1'] = 0.5*as.numeric(M1['yield','S1'])
out=microPopModel(microbeNames = c('M1','newM2'),
times=seq(0,6,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI
)
out$solution[nrow(out$solution),c('M1','newM2','S1')]
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI,
numStrains=3,
strainOptions=list(randomParams=c('halfSat','yield','maxGrowthRate'),
seed=1,distribution='uniform',
percentTraitRange=20,
applyTraitTradeOffs=TRUE,
tradeOffParams=c('halfSat','maxGrowthRate'))
)
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI,
numStrains=c(M1=3,M2=2),
strainOptions=list(randomParams=c('halfSat','yield','maxGrowthRate'),
seed=1,distribution='uniform',
percentTraitRange=20,
applyTraitTradeOffs=TRUE,
tradeOffParams=c('halfSat','maxGrowthRate'))
)
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI,
numStrains=c(M1=3,M2=2),
strainOptions=list(randomParams=c('halfSat','yield','maxGrowthRate'),
seed=1,distribution='uniform',
percentTraitRange=20,
applyTraitTradeOffs=TRUE,
tradeOffParams=c('halfSat','maxGrowthRate'))
)
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI,
numStrains=c(M1=2,M2=3),
strainOptions=list(randomParams=c('halfSat','yield','maxGrowthRate'),
seed=1,distribution='uniform',
percentTraitRange=20,
applyTraitTradeOffs=TRUE,
tradeOffParams=c('halfSat','maxGrowthRate'))
)
dev.copy()
dev.copy(png,'test1.png')
dev.copy(png,'~/MicroPop/Rpackage/microPop/vignettes/test1.png')
dev.copy(png,'~/MicroPop/Rpackage/microPop/vignettes/test1.png')
dev.copy(png,'~/MicroPop/Rpackage/microPop/vignettes/test1.png')
out=microPopModel(microbeNames = c('M1','M2'),
times=seq(0,3,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=micNew.SI,
numStrains=c(M1=2,M2=3),
strainOptions=list(randomParams=c('halfSat','yield','maxGrowthRate'),
seed=1,distribution='uniform',
percentTraitRange=20,
applyTraitTradeOffs=TRUE,
tradeOffParams=c('halfSat','maxGrowthRate'))
)
getwd()()
getwd()
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz')
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',source=TRUE,repos=NULL)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',source=TRUE,repos=NULL)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(microPop)
#check package version
packageVersion("microPop")
#check package version
packageVersion("microPop")
M1=createDF(file='MFG1.csv')
kable(M1)
s=seq(0,0.05,0.0001)
Gmax=5
K=0.001
G=Gmax*s/(s+K)
plot(range(s),c(0,5),type='n',xlab='substrate (g/l)',ylab='Specific growth rate (/d)')
s=seq(0,0.05,0.0001)
Gmax=5
K=0.001
G=Gmax*s/(s+K)
plot(range(s),c(0,5),type='n',xlab='substrate (g/l)',ylab='Specific growth rate (/d)')
knitr::opts_chunk$set(echo = TRUE)
showSolutions=FALSE
library(knitr)
library(microPop)
M1=createDF(file='MFG1.csv')
kable(M1)
s=seq(0,0.05,0.0001)
Gmax=5
K=0.001
G=Gmax*s/(s+K)
plot(range(s),c(0,5),type='n',xlab='substrate (g/l)',ylab='Specific growth rate (/d)')
lines(s,G)
abline(v=K,lty=2,col=2)
abline(h=Gmax,col=3,lty=2)
legend('right',col=c(2,3),lty=2,legend=c('halfSat','maxGrowthRate'),bty='n')
res.SI=createDF(file='resourceSI.csv')
kable(res.SI)
mic.SI=createDF(file="microbeSI.csv")
kable(mic.SI)
out=microPopModel(microbeNames = 'M1',
times=seq(0,1,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=mic.SI)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',source=TRUE,repos=NULL)
library(microPop)
source('~/MicroPop/Rpackage/microPop/inst/DemoFiles/human1.R')
q()
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL, source=TRUE)
library(microPop)
source('~/MicroPop/Rpackage/microPop/inst/DemoFiles/human1.R')
knitr::opts_chunk$set(echo = TRUE)
out=microPopModel(microbeNames = 'M1',
times=seq(0,1,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=mic.SI)
out=microPopModel(microbeNames = 'M1',
times=seq(0,1,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=mic.SI)
out=microPopModel(microbeNames = 'M1',
times=seq(0,1,0.001),
resourceSysInfo=res.SI,
microbeSysInfo=mic.SI)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman)
library(microPop)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(microPop)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(microPop)
?quickPlot
q()
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(microPop)
?quickPlot
knitr::opts_chunk$set(echo = TRUE)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions = list(cex.plot=1,cex.legend=0.7))
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(microPop)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions=list(yLabel='concentration (g/l)',xLabel='time (d)',
plotFig=TRUE,sumOverStrains=FALSE,saveFig=FALSE,
figType='eps',figName='Human1',cex.plot=1,cex.legend=0.7)
)
library(knitr)
library(microPop)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions=list(yLabel='concentration (g/l)',xLabel='time (d)',
plotFig=TRUE,sumOverStrains=FALSE,saveFig=FALSE,
figType='eps',figName='Human1',cex.plot=0.5,cex.legend=0.5)
)
library(microPop)
?quickPlot
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(microPop)
?microPopModel
knitr::opts_chunk$set(echo = TRUE)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions=list(yLabel='concentration (g/l)',xLabel='time (d)',
plotFig=TRUE,sumOverStrains=FALSE,saveFig=FALSE,
figType='eps',figName='Human1',cex.plot=0.5,cex.legend=0.5)
)
quickPlot(out$soln, length(out$parms$resourceNames), out$parms$numStrains, out$parms$microbeNames,
cex.plot=1,cex.legend=0.7)
knitr::opts_chunk$set(echo = TRUE)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz,repos=NULL,source=TRUE')
library(knitr)
library(microPop)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz,repos=NULL,source=TRUE')
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
quickPlot(out$soln, length(out$parms$resourceNames), out$parms$numStrains, out$parms$microbeNames,
cex.plot=1,cex.legend=0.7)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions=list(yLabel='concentration (g/l)',xLabel='time (d)',
plotFig=TRUE,sumOverStrains=FALSE,saveFig=FALSE,
figType='eps',figName='Human1',cex.plot=0.5,cex.legend=0.5)
)
quickPlot(out$soln, length(out$parms$resourceNames), out$parms$numStrains, out$parms$microbeNames,
cex.plot=1,cex.legend=0.7)
knitr::opts_chunk$set(echo = TRUE)
quickPlot(out$solution,length(out$parms$resourceNames),out$parms$numStrains,out$parms$microbeNames)
install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(knitr)
library(microPop)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions=list(cex.plot=1,cex.legend=0.7)
)
quickPlot(out$solution,length(out$parms$resourceNames),out$parms$numStrains,out$parms$microbeNames)
?matplot
num=length(out$parms$microbeNames)
matplot(out$solution[,1],out$solution[,out$parms$microbeNames],col=rainbow(num),type='l',lwd=2,
ylab='Concentration (g/l)',xlab='Time')
legend('right',lty=1:num,legend=out$parms$microbeNames,col=rainbow(num))
num=length(out$parms$resourceeNames)
matplot(out$solution[,1],out$solution[,out$parms$resourceNames],col=rainbow(num),type='l',lwd=2,
ylab='Concentration (g/l)',xlab='Time')
legend('right',lty=1:num,legend=out$parms$resourceNames,col=rainbow(num))
matplot
?ggsave
libary(ggplot2)
install.packages('ggplot2')
libary(ggplot2)
library(ggplot2)
?ggsave
#install.packages('~/MicroPop/Rpackage/microPop_1.6.tar.gz',repos=NULL,source=TRUE)
library(knitr)
library(microPop)
library(ggplot2)
out=microPopModel(
microbeNames=c('Bacteroides','NoButyStarchDeg','Acetogens'),
times=seq(0,4,1/24),
resourceSysInfo=resourceSysInfoHuman,
microbeSysInfo=microbeSysInfoHuman,
plotOptions=list(cex.plot=1,cex.legend=0.7)
)
soln=out$solution
df=data.frame(soln)
df
soln=out$solution
df=data.frame(soln)
ggplot(data = df, aes(x = time, y = out$parms$microbeNames))+
geom_line(color = "red", size = 2)
soln=out$solution
df=data.frame(soln)
ggplot(data = df, aes(x = time, y = out$parms$microbeNames))+
geom_line(aes(color = out$parms$microbeNames, size = 1))
data<-rbind(c(6,16,25), c(1,4,7), c(NA, 1,2), c(NA, NA, 1))
as.data.frame(data)
matplot(data, log="y",type='b', pch=1)
data
?matplot
data<-rbind(c(6,16,25), c(1,4,7), c(NA, 1,2), c(NA, NA, 1))
as.data.frame(data)
matplot(data, type='b', pch=1)
library(reshape2)
install.packages(reshape2)
install.packages('reshape2')
library(reshape2)
#ggplot needs a dataframe
data <- as.data.frame(data)
#id variable for position in matrix
data$id <- 1:nrow(data)
#reshape to long format
plot_data <- melt(data,id.var="id")
library(reshape2)
#ggplot needs a dataframe
data <- as.data.frame(data)
#id variable for position in matrix
data$id <- 1:nrow(data)
#reshape to long format
plot_data <- melt(data,id.var="id")
#plot
ggplot(plot_data, aes(x=id,y=value,group=variable,colour=variable)) +
geom_point()+
geom_line(aes(lty=variable)) +
scale_y_log10(breaks=c(1,2,5,10,25))
plot_data
data
mic=c('V1','V2')
res='V3'
seq(1,nrow(plot_data))
plot_data$type[variable%in%mic]='M'
plot_data$type[plot_data$variable%in%mic]='M'
plot_data
plot_data$type[plot_data$variable%in%res]='R'
plot_data
library(reshape2)
#ggplot needs a dataframe
data <- as.data.frame(data)
#id variable for position in matrix
data$id <- 1:nrow(data)
#reshape to long format
plot_data <- melt(data,id.var="id")
plot_data$type[plot_data$variable%in%res]='R'
plot_data$type[plot_data$variable%in%mic]='M'
#plot
ggplot(plot_data, aes(x=id,y=value,group=variable,colour=variable)) +
geom_point()+
geom_line(aes(lty=variable)) +
scale_y_log10(breaks=c(1,2,5,10,25))
library(reshape2)
#ggplot needs a dataframe
data <- as.data.frame(data)
#id variable for position in matrix
data$id <- 1:nrow(data)
#reshape to long format
plot_data <- melt(data,id.var="id")
plot_data$type[plot_data$variable%in%res]='R'
plot_data$type[plot_data$variable%in%mic]='M'
#plot
ggplot(plot_data, aes(x=id,y=value,group=variable,colour=variable)) +
geom_point()+
geom_line(aes(lty=variable)) +
scale_y_log10(breaks=c(1,2,5,10,25)) +facet_wrap(type)
plot_data
library(reshape2)
#ggplot needs a dataframe
data <- as.data.frame(data)
#id variable for position in matrix
data$id <- 1:nrow(data)
#reshape to long format
plot_data <- melt(data,id.var="id")
plot_data$type[plot_data$variable%in%res]='R'
plot_data$type[plot_data$variable%in%mic]='M'
#plot
ggplot(plot_data, aes(x=id,y=value,group=variable,colour=variable)) +
geom_point()+
geom_line(aes(lty=variable)) +facet_wrap(type)
plot_data
library(reshape2)
#ggplot needs a dataframe
data <- as.data.frame(data)
#id variable for position in matrix
data$id <- 1:nrow(data)
#reshape to long format
plot_data <- melt(data,id.var="id")
plot_data$type[plot_data$variable%in%res]='R'
plot_data$type[plot_data$variable%in%mic]='M'
#plot
ggplot(plot_data, aes(x=id,y=value,group=variable,colour=variable)) +
geom_point()+
geom_line(aes(lty=variable)) +facet_wrap(~type)
install.packages('tidyverse')
library(tidyverse)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
getwd()
setwd('PCN2022/Rpackage/AllCode/')
use_git()
library(devtools)
use_git()
